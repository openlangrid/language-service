<project name="common" default="compile" >
	<dirname property="common.xml.dir" file="../jp.go.nict.langrid.wrapper.common/common.xml" />
	<property file="${common.xml.dir}/ant.properties" />
	
	<condition property="basename" value="${ant.project.name}">
		<not><isset property="basename" /></not>
	</condition>

	<target name="init">
		<mkdir dir="${build}" />
		<mkdir dir="${build.test}" />
	</target>

	<condition property="has.compile.classpath">
		<isreference refid="classpath.compile" />
	</condition>
	<target name="checkcp" unless="has.compile.classpath">
		<echo message="using jp.go.nict.langrid.wrapper.common/lib/empty/*.jar as compile.classpath" />
		<path id="classpath.compile">
			<fileset file="${common.xml.dir}/lib/empty" />
		</path>
	</target>

	<presetdef name="javac5">
		<javac
			debug="on"
			source="1.5" target="1.5" encoding="UTF-8"
		/>
	</presetdef>

	<condition property="has.resource">
		<and>
			<isset property="resource" />
			<available file="${resource}" />
		</and>
	</condition>

	<target name="copyResource" if="has.resource">
		<native2ascii encoding="UTF-8" src="${resource}"
			dest="${build}" includes="**/*.properties" />
		<copy todir="${build}">
			<fileset dir="${resource}" includes="**" excludes="**/*.properties" />
		</copy>
	</target>

	<target name="compile" depends="init,checkcp,copyResource">
		<fail message="${classpath.compile} must be set">
			<condition><not><isreference refid="classpath.compile" /></not></condition>
		</fail>
		<javac5 srcdir="${src}" destdir="${build}">
			<classpath>
				<path refid="classpath.compile" />
				<pathelement path="${common.xml.dir}/lib/langrid-commons-1.2.jar" />
				<pathelement path="${common.xml.dir}/lib/langrid-commons-ws-1.2.jar" />
				<pathelement path="${common.xml.dir}/lib/langrid-language-1.2.jar" />
				<pathelement path="${common.xml.dir}/lib/langrid-repository-1.2.jar" />
				<pathelement path="${common.xml.dir}/lib/langrid-service_1_2-1.2.jar" />
				<pathelement path="${common.xml.dir}/lib/commons-dbcp-1.2.2.jar" />
				<pathelement path="${common.xml.dir}/lib/commons-pool-1.3.jar" />
				<pathelement path="${common.xml.dir}/lib/commons-logging-1.0.4.jar" />
				<pathelement path="${dist}/langrid-wrapper-common-1.2.jar" />
				<pathelement path="${dist}/wrapper_templib.jar" />
				<pathelement path="${dist}/langrid-treetagger-engine-1.2.1.jar" />
				<pathelement path="${dist}/langrid-treetagger-client-1.2.jar" />
			</classpath>
		</javac5>
		<copy todir="${build}">
			<fileset dir="${src}" includes="**">
				<exclude name="**/*.java" />
			</fileset>
		</copy>

		<javac5 srcdir="${src.test}" destdir="${build.test}">
			<classpath>
				<path refid="classpath.compile" />
				<pathelement path="${common.xml.dir}/lib/langrid-commons-1.2.jar" />
				<pathelement path="${common.xml.dir}/lib/langrid-commons-1.2-test.jar" />
				<pathelement path="${common.xml.dir}/lib/langrid-commons-ws-1.2.jar" />
				<pathelement path="${common.xml.dir}/lib/langrid-language-1.2.jar" />
				<pathelement path="${common.xml.dir}/lib/langrid-repository-1.2.jar" />
				<pathelement path="${common.xml.dir}/lib/langrid-service_1_2-1.2.jar" />
				<pathelement path="${common.xml.dir}/lib.test/junit_3.8.1.jar" />
				<pathelement path="${dist}/langrid-wrapper-common-1.2.jar" />
				<pathelement path="${dist}/wrapper_templib.jar" />
				<pathelement path="${dist.test}/langrid-wrapper-common-1.2-tests.jar" />
				<pathelement path="${build}" />
				<pathelement path="${dist}/langrid-treetagger-client-1.2.jar" />
			</classpath>
		</javac5>
		<native2ascii encoding="UTF-8" src="${src.test}"
			dest="${build.test}" includes="**/*.properties" />
		<copy todir="${build.test}">
			<fileset dir="${src.test}" includes="**">
				<exclude name="**/*.properties" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>

	<target name="javadoc" depends="compile">
		<javadoc
			sourcepath="${src}" destdir="apidocs"
			source="1.5" encoding="UTF-8"
			classpathref="compile.path"
			packagenames="*"
		/>
	</target>

	<target name="clean">
		<delete dir="${build}" />
		<delete dir="${build.test}" />
	</target>

	<target name="recompile">
		<antcall target="clean" />
		<antcall target="compile" />
	</target>

</project>
